server.port=${PORT:8080}

# PostgreSQL Config
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:database}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Jpa Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true

# Redis Config
spring.cache.type=redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:redis}
redis.address=redis://${REDIS_HOST:localhost}:${REDIS_PORT:6379}
redis.name=${REDIS_NAME:default}

#solution.type=${SOLUTION_TYPE:SIMPLE}
#solution.type=LOCKING
#solution.type=TRANSACTION
#solution.type=CACHE
solution.type=PROTOCOL

length.text=20
records.number=30000
#records.number=10
sleep.time=10
database.initialization.threads.number=10
#database.initialization.threads.number=1
simulation.threads.number=30
#simulation.threads.number=1

# Enable JSON logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} [${springAppName:-},${spring.zipkin.service.name:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] --- [%t] %-40.40logger{39} : %m%n
logging.file.name=myapp.log
logging.file.path=./logs
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# Configure Prometheus endpoint
management.endpoints.web.exposure.include=prometheus,health,metrics
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

spring.datasource.hikari.maximumPoolSize=30
spring.datasource.hikari.connectionTimeout=300000

protocol.server.type=${SERVER_TYPE:MASTER}
protocol.server.address=${MASTER_SERVER:localhost}
protocol.server.port=${MASTER_PORT:8081}